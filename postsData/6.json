{"title":"import types","contents":"# Named import\n```js\nimport { export1 } from \"/modules/my-module.js\";\n//...\nconsole.log(export1);\n```\nsuppose a value `export1` was exported from the `my-module.js`, this inserts `export1` into the current scope, you can export a list of them or rename them with `as <rename>`:\n```js\nimport { exportWithReallyLongName as export1, export2 } from \"/modules/my-module.js\";\n//...\nconsole.log(export1);\n```\nnote that a module might export a string instead, which you must use `as`\n```js\n// /modules/my-module.js\nconst a = 1;\nexport { a as \"a-b\" };\n//\n// main.js\nimport { \"a-b\" as a } from \"/modules/my-module.js\"; // required\n```\n","id":6}