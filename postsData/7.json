{"title":"C-strings","contents":"The one you already know, but a thing to keep in mind is that it exists for the **entirety of the program**, therefore it is safe to return as a `std::string_view` parameter.\n# `std::string`\nWhile we have regular C strings, we are best off using the `std::string` **object**, we can assign them to new variables and change the string without needing functions like C's `strcpy()`:\n```cpp\nstd::string name {\"Alex\"};\nstd::cout << name << '\\n';\nname = \"Paul\";\n```\nString object Properties:\n- length: can be called with `name.length()`, which returns the lenght\n## `std::getline()`\nsimilar to [[Input and output streams#`std cin.getline()`]] but made to work with `std::strings`\n```cpp\nstd::string strBuf{};\nstd::getline(std::cin , strBuf);\nstd::cout << strBuf << '\\n';\nstrBuf.clear();\n\nstd::ifstream inf { \"text.txt\" };\nif (inf) {\n\t\tstd::getline(inf, strBuf)\n\t std::cout << strBuf\n}\n```\n","id":7}